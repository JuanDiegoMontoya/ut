#version 450

struct packed_vec3 { float x, y, z; };

layout(set = 0, binding = 0, std430) readonly restrict buffer InBufferA
{
    packed_vec3 data[];
}A;

layout(set = 0, binding = 1, std430) readonly restrict buffer InBufferB
{
    packed_vec3 data[];
}B;

layout(set = 0, binding = 2, std430) writeonly restrict buffer OutBuffer
{
    packed_vec3 data[];
}C;

layout(local_size_x = 128) in;
void main()
{
    uint i = gl_GlobalInvocationID.x;
    if (i >= A.data.length()) return;
    packed_vec3 a = A.data[i];
    packed_vec3 b = B.data[i];
    C.data[i] = packed_vec3(a.x + b.x, a.y + b.y, a.z + b.z);
}